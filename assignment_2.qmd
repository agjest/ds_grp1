---
title: "assignment_2"
format: html
editor: visual
---

```{r}
#| label: setup

library(tidyverse)
library(vtable)

```

#\|

## Quarto

Quarto enables you to weave together content and executable code into a finished document.
To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code.
You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
hoyde <- modelr::heights
hoyde <- hoyde %>%
mutate(
bmi = weight * 0.4536/(height * 2.54/100)^2,
married = fct_collapse(
.f = marital,
married = "married",
other_level = "not married"
),
edu_fac = cut(
x = education,
breaks = c(0, 12, 14, 16, 21),
labels = c("not_hs", "not_cc", "not_col", "col_plus"),
right = FALSE
)
)
```

```{r}
# Inntekt lik 0
hoydeZeroInc <- hoyde |>
filter(income == 0)
# «Normal» inntekt
hoydeNormInc <- hoyde |>
filter(income > 0 & income < 343830)
hoydeHighInc <- hoyde |>
filter(income == 343830)
```

```{r}
hoyde |>
ggplot(
mapping = aes(
x = height,
y = income
)
) +
geom_jitter(
size = 1,
alpha = 0.40
) +
geom_smooth(
formula = y ~ x,
method = "lm",
colour = "black",
lwd = 0.75,
se = FALSE
)
```

```{r}
hoydeNormInc |>
ggplot(
mapping = aes(
x = height,
y = income
)
) +
geom_jitter(
size = 1,
alpha = 0.40
) +
geom_smooth(
formula = y ~ x,
method = "lm",
colour = "black",
lwd = 0.75,
se = FALSE
)
```

```{r}
meanHeightMale <- hoyde |>
filter(sex == 'male') %>%
select(height) |>
# konverterer en tibble med 3402 rekker og 1 kolonne
# til en vektor med 3402 elementer siden mean() forlanger en
# vektor som input
pull() |>
# finner gjennomsnittet av verdiene i vektoren
mean()
meanHeightFemale <- hoyde |>
filter(sex == 'female') %>%
select(height) |>
pull() |>
mean()
# standard deviation
sdHeightMale <- hoyde |>
filter(sex == 'male') |>
select(height) |>
pull() |>
sd()
sdHeightFemale <- hoyde |>
filter(sex == 'female') |>
select(height) |>
pull() |>
sd()
```

```{r}
ggplot(hoydeNormInc, aes(
  x = edu_fac,
  y = income
)) +
  geom_jitter(alpha = 0.5) +
  geom_smooth(method = "lm")
```

```{r}
ggplot(hoydeNormInc, aes(
  x = height,
  y = income
)
) +
geom_point() +
  facet_wrap(~edu_fac)

```

```{r}
na <- is.na(hoyde)
```

```{r}
hoydeNormInc |>
  filter(!is.na(edu_fac)) |> 
ggplot(
mapping = aes(
x = edu_fac,
y = income,
colour = edu_fac
)
) +
geom_jitter(
size = 1,
alpha = 0.40
) +
geom_smooth(
method = "lm"
)
```

```{r}
hoydeNormInc |>
  filter(!is.na(edu_fac)) |> 
ggplot(
mapping = aes(
x = edu_fac,
y = height,
colour = edu_fac
)
) +
geom_jitter(
size = 1,
alpha = 0.40
)
```

```{r}
hoydeNormInc |>
  filter(!is.na(edu_fac)) |> 
ggplot(
mapping = aes(
x = height,
y = income,
colour = edu_fac
)
) +
geom_jitter(
size = 1,
alpha = 0.40
) +
  facet_wrap(~edu_fac)
```

```{r}
hoydeZeroInc |>
st("sex")
```

```{r}
hoydeHighInc |>
st("sex")
```
